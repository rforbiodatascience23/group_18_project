---
title: "04_augment.qmd"
format: html
editor: visual
---

# Load clean_data1

```{r warning=FALSE}
clean_data1 <- read_tsv(
  file = "~/group_18_project/data/02_dat_clean1.tsv",
  show_col_types = FALSE)
```

# Augment

### Data Wrangling: BMI

Compute the Body Mass Index (BMI) using the Height and Weight columns. The BMI will be added in a new column named: 'BMI'.

```{r}
clean_data1<- clean_data1 |> 
  mutate(
    height_m = height_cm/100,
    BMI = weight_kg/(height_m*2)) |>    # Calculate BMI
  select(-height_m) |>                  # Remove 'height_m'. No longer used.
  relocate(BMI, .after = height_cm)
```

### Data Wrangling: Comorbidities

Separating and counting the number of comorbidities presented bye each patient. The number is added in a new column named: 'num_comorbidities'.

If comorbidities appears like 'NA' a 0 is assigned to 'num_comorbidities'.

```{r}
 
clean_data1 <- clean_data1 |> 
  mutate(
    num_comorbidities = ifelse(is.na(comorbidities), 0, 
                               str_count(comorbidities, pattern = ",") + 1)) |>
    relocate(num_comorbidities, .after = comorbidities)
```

### Data Wrangling: Hospitalization complications

Compute the sum fo hospitalization complications and add is as a new columns called: " "

```{r}

clean_data1 <- clean_data1 |> 
  mutate(
    num_hosp_complications = ifelse(is.na(hospitalization_complications), 0, 
                                    str_count(hospitalization_complications, pattern = ",") + 1)) |>
    relocate(num_hosp_complications, .after = hospitalization_complications)
```

### Data Wrangling: Length of stay per admission (los_for_each_admission_days)

```{r}

# Function to sum values in a string
sum_values <- function(string) {
  if (string != "") {
    values <- as.numeric(unlist(strsplit(string, ",")))
    return(sum(values))
  } else {
    return(0)
  }
}

clean_data1 <- clean_data1 |> 
  mutate(
    los_for_each_admission_days = ifelse(is.na(los_for_each_admission_days), 0,
                                         los_for_each_admission_days),
    num_days_admited = sapply(los_for_each_admission_days, sum_values)) |>
  relocate(num_days_admited, .after = los_for_each_admission_days)
  
```

### Save it as a '.tsv' file

```{r}
# Save aug data from sheet 1
write.table(x = clean_data1,
            file = "~/group_18_project/data/03_dat_aug1.tsv", 
            sep = "\t", 
            quote = TRUE,
            row.names = FALSE)
```
