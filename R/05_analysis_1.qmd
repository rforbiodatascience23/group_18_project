---
title: "05_analysis_1.qmd"
format: html
editor: visual
---

# Analysis 1

## Load clean data from data folder

```{r warning=FALSE}

analysis_1.1 <- read_tsv(
  file = "~/group_18_project/data/03_dat_aug1.tsv",
  show_col_types = FALSE)

analysis_1.2  <- read_tsv(
  file = "~/group_18_project/data/02_dat_clean2.tsv",
  show_col_types = FALSE)
```

## Plot 1

Description: The presented plot illustrates the distribution of patients who experienced radiation-induced Hemorrhagic Cystitis (HC) based on the type of treatment received. Utilizing proportions in this visualization offers a comparative view of how different treatments are distributed relative to the total number of cases with HC incidence. Each bar represents the proportion of patients receiving a specific treatment within the categories of HC incidence, providing valuable insights into the treatment patterns in the context of radiation-induced HC.

```{r}

plot1 <- 
  analysis_1.2 |> 
  count(treatment, hc_incidence) |>
  group_by(treatment) |>
  mutate(freq = n / sum(n)) |>
  ggplot(aes(x = treatment, 
           y = freq,
           fill = hc_incidence)) +  
  geom_col(position = position_dodge(
    preserve = "single"),
    colour = "black",
    alpha = 0.5) +
  geom_hline(yintercept = 0) +
  labs(x = "Treatment Received",    
       y = "Proportion",              
       fill = "Study of Radiation-Induced Hemorrhagic Cystitis"     
  ) +
  theme_minimal(base_size = 12) +
  theme(legend.position = "top",
        panel.grid.major.x = element_blank(),
        axis.text.x = element_text(angle = 45,
                                   hjust = 1,
                                   vjust = 1.1))

ggsave(filename = "key_plot_1.1.png", 
      plot = plot1, 
      path = "~/group_18_project/results",
      width = 8, 
      height = 5, 
      dpi = 300)
```

## Plot 2

Linear Regression Analysis of Body Mass Index (BMI) in relation to radiation dose.

```{r}
#Create the plot
plot2 <- 
  analysis_1.1 |> 
  na.omit(analysis_1.1) |> 
  ggplot(aes(x=radiation_dosage,
             y=BMI)) +
  geom_point() +
  geom_smooth(method = "lm", 
              se = FALSE, 
              color = "blue") +
  theme_minimal(base_size = 16) +
  labs(x = "Radiation Dose",    
       y = "BMI",              
       title = "Linear Regression between BMI and radiation dose") +
  theme(plot.title = element_text(hjust = 0.5, size = 16))  

# Perform linear regression
model <- lm(radiation_dosage ~ BMI, data = analysis_1.1)

# Print regression summary
summary(model)

#Print plot
print(plot2)

# Save plot to folder called "results"
ggsave(filename = "key_plot_1.2.png", 
      plot = plot2, 
      path = "~/group_18_project/results",
      width = 8, 
      height = 5, 
      dpi = 300)
```

## Plot 3

Analysis of Patient Dose Percentages: Distinguishing Low, Medium, and High Levels across various radiation types.

```{r}
# Define dose categories based on paper
low_dose_threshold <- 70
high_dose_threshold <- 85

# Categorize doses using mutate
analysis_1.1 <- 
  mutate(analysis_1.1, 
         dose_category = cut(radiation_dosage, 
                             breaks = c(-Inf,low_dose_threshold, high_dose_threshold, Inf),
                             labels = c('Low Dose', 'Medium Dose', 'High Dose')))

# Calculate percentages for each type of radiation using summarise
result_3 <- 
  analysis_1.1 |> 
  group_by(radiation_type, dose_category) |> 
  summarise(Proportion = n()/nrow(analysis_1.1)) |> 
  filter(!is.na(dose_category) & !is.na(radiation_type) & !is.na(Proportion)) |>  
  ungroup()

# Create a grouped bar plot
plot3 <- 
  ggplot(data = result_3,
         aes(x = radiation_type, 
             y = Proportion, 
             fill = dose_category)) +
  geom_col(position = position_dodge(
    preserve = "single"),
    colour = "black",
    alpha = 0.5) + 
  geom_hline(yintercept = 0) +
  labs(title = "Radiation Dosage Category" ,
       subtitle = "Radiation Type and corresponding dosage category",
       #x = "Type of Radiation",
       y = "Proportion",
       fill = "Radiation Dosage Category") +
  theme_minimal(base_size = 12) +
  theme(legend.position = "right",
        panel.grid.major.x = element_blank(),
        axis.text.x = element_text(angle = 45,
                                   hjust = 1,
                                   vjust = 1.08),
        axis.title.x = element_blank()
        )

#Print plot
print(plot3)

# Save plot to the "results" folder
ggsave(filename = "key_plot_1.3.png", 
      plot = plot3, 
      path = "~/group_18_project/results",
      width = 8, 
      height = 5, 
      dpi = 300)
```

## Plot 4

Comparison of the average time passed since the completion of radiation treatment and the first incident of HC

```{r}
plot4_data <- 
  analysis_1.1 |>
  select(radiation_type, radiation_completion_to_first_hc) |>
  mutate(TimePassed = as.numeric(radiation_completion_to_first_hc)) |>
  filter(!is.na(TimePassed)) |> 
  filter(!is.na(radiation_type)) 

result_4 <- 
  plot4_data |>
  group_by(radiation_type) |>
  summarize(
    AvgTimePassed = mean(TimePassed),
    MedianTimePassed = median(TimePassed),
    TotalObservations = n())

plot4 <- 
  ggplot(data = result_4, 
         aes(x = radiation_type,
             y = AvgTimePassed, 
             fill = radiation_type)) +
  geom_bar(stat = "identity", position = "dodge", color = "black", alpha = 0.5) +
  labs(expression(title = "Comparison of Average Time Since Radiation and Time to HC"),
       x = "Type of Radiation",
       y = "Average Time Since Radiation\n(months)",
       fill = "Type of Radiation") +
  theme_minimal()+
   theme(axis.text.x = element_blank())


print(plot4)

# Save plot to the "results" folder
ggsave(filename = "key_plot_1.4.png", 
      plot = plot4, 
      path = "~/group_18_project/results",
      width = 8, 
      height = 5, 
      dpi = 300)
```

## Plot number 5

please describe the plot here

```{r}
 #Calculate the percentage of patients who received low, medium, and high doses for each radiation type
percentage_df <- clean_data1 |> 

# Calculate the percentage of patients who received low, medium, and high doses for each radiation type
percentage_df <- analysis_1.1 |> 
  group_by(radiation_type)  |> 
  summarize(
    Low = sum(radiation_dosage < 50) / n() * 100,
    Medium = sum(radiation_dosage >= 50 & radiation_dosage < 70) / n() * 100,
    High = sum(radiation_dosage >= 70) / n() * 100
  )

# Print the resulting data frame
print(percentage_df)


```

## Plot 5

please describe the plot here

```{r}
# Melt the data frame to long format for easier plotting
melted_df_5.1 <- tidyr::gather(percentage_df, key = "DoseCategory", value = "Percentage", -radiation_type)

# Create a stacked bar plot
ggplot(data = melted_df_5.1,
       aes(x = radiation_type, y = Percentage, fill = DoseCategory)) +
  geom_bar(stat = "identity", 
           position = "stack", 
           color = "black") +
  labs(title = "Percentage of Patients in Low, Medium, and High Dose Categories",
       x = "Radiation Type",
       y = "Percentage") +
  scale_fill_manual(values = c("Low" = "skyblue", 
                               "Medium" = "lightcoral", 
                               "High" = "gold")) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))




# Melt the data frame to long format for easier plotting
melted_df_5.2 <- tidyr::gather(percentage_df, key = "DoseCategory", value = "Percentage", -radiation_type)

# Create a larger stacked bar plot with extended y-axis range
plot5 <-
  ggplot(data = melted_df_5.2, 
         aes(x = radiation_type, 
             y = Percentage, 
             fill = DoseCategory)) +
  geom_bar(stat = "identity", 
           position = "stack", 
           color = "black") +
  labs(title = "Percentage of Patients in Low, Medium, and High Dose Categories",
       x = "Radiation Type",
       y = "Percentage") +
  scale_fill_manual(values = c("Low" = "skyblue", 
                               "Medium" = "lightcoral", 
                               "High" = "gold")) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1), 
        axis.title.y = element_text(size = 12),  # Adjust y-axis title size
        axis.text.y = element_text(size = 10)) +   # Adjust y-axis text size
  coord_cartesian(ylim = c(0, 150))  # Set y-axis range

# Save plot to the "results" folder
ggsave(filename = "key_plot_1.5.png", 
      plot = plot5, 
      path = "~/group_18_project/results",
      width = 8, 
      height = 5, 
      dpi = 300)

```

## Plot 6

Relationship Between Body Mass Index (BMI) and time from radiation completion to first incidence of Hemorrhagic Cystitis.

```{r}
#Create a scatter plot
plot6 <- 
  ggplot(data = analysis_1.1,
         aes(x = radiation_completion_to_first_hc, 
             y = BMI, 
             color = ethnicity)) +
  geom_point() +
  labs(title = "BMI vs Radiation Completion to First HC",
       x = "Radiation Completion to First HC",
       y = "BMI")+
  scale_color_manual(values = c("african_american" = "blue",
                                "caucasian" = "red"))+
  theme_minimal(base_size = 12)
  

#Print plot
print(plot6)

# Save plot to folder called "results"
ggsave(filename = "key_plot_1.6.png", 
      plot = plot6, 
      path = "~/group_18_project/results",
      width = 8, 
      height = 5, 
      dpi = 300)


```

## Plot 7

Kaplan Meier curve showing the probability of HC-free survival over time (n=562 months).

```{r}
#Create a new data frame to add columns "event" and "time"
event_time <- 
  analysis_1.2 |> 
  mutate(event = as.numeric(hc_incidence == "no"), # andf for hc patients?
         time = rep(1:562, length.out = n())
         )
# Fit a Kaplan-Meier survival curve using the function: survfit
km_fit <- survfit(Surv(time, event) ~ 1, data= event_time)

# Create the survival plot
plot7 <- 
  plot(km_fit, 
       main = "Kaplan-Meier Curve of HC-Free Survival P. vs Time",
       xlab = "Time (Months)", ylab = "HC-Free Survival Probability",
       col = "blue", 
       lwd = 2,
       conf.int = FALSE, 
       ylim = c(0, 1))

# Add a legend
legend("topright",
       legend = c("HC-Free Survival"), 
       col = c("blue"),
       lwd = 2, 
       lty = 1)

#Print plot
print(plot7)


# Save the plot to folder results
ggsave(filename = "key_plot_1.7.png", 
      plot = plot7, 
      path = "~/group_18_project/results",
      width = 8, 
      height = 5, 
      dpi = 300)
```

bnm

Plot 8: The distribution of radiation duration among different types of radiation and diseases.

```{r}
library(ggplot2)

ggplot(data, aes(x = category, fill = radiation_type)) +
  geom_bar(position = "dodge") +
  ggtitle("Radiation Duration vs Health Factors") +
  xlab("Health Factors") +
  ylab("Radiation Duration") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

## Plot 8: The distribution of radiation duration among different types of radiation.


# Boxplot
plot8 <- ggplot(data = analysis_1.1, 
                aes(x = radiation_type,
                    y = radiation_duration, 
                    fill = radiation_type)) +
  geom_boxplot() +
  labs(title = "Boxplot of Radiation Durations",
       x = "Radiation Type",
       y = "Radiation Duration") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate x-axis labels

# Display the boxplot
print(plot8)

# Save the plot to folder results
ggsave(filename = "key_plot_1.8.png", 
      plot = plot8, 
      path = "~/group_18_project/results",
      width = 8, 
      height = 5, 
      dpi = 300)

```

## Plot 9

```{r}
# Faceted Scatter Plot
plot9 <- ggplot(data = analysis_1.1, 
         aes(x = radiation_dosage, 
             y = radiation_duration, 
             color = radiation_type)) +
  geom_point() +
  facet_grid(. ~ cancer_type) +
  labs(title = "Faceted Scatter Plot of Radiation Dosage vs. Duration by Cancer Type",
       x = "Radiation Dosage",
       y = "Radiation Duration")

# Display the faceted scatter plot
print(plot9)

# Save the plot to folder results
ggsave(filename = "key_plot_1.9.png", 
      plot = plot9, 
      path = "~/group_18_project/results",
      width = 8, 
      height = 5, 
      dpi = 300)


```

Plot 9 :3D plot: Radiation type, Radiation dosage, Radiation duration and Cancer type.

(Just for the group)

```{r}
install.packages("plotly")
```

```{r}
library(plotly)

# 3D Scatter Plot
scatter_3d <- 
  plot_ly(data,
          x = ~radiation_dosage, 
          y = ~radiation_duration, 
          z = ~cancer_type, 
          color = ~radiation_type, 
          type = "scatter3d",
          mode = "markers") %>%
  layout(scene = list(xaxis = list(title = "Radiation Dosage"),
                      yaxis = list(title = "Radiation Duration"),
                      zaxis = list(title = "Cancer Type")))

# Display the 3D scatter plot
print(scatter_3d)
```

## Plot 10

Description: The boxplot is used to visualize the distribution of the normalized values for various variables obtained for patient that developed HC. Each box represents the interquartile range (IQR), with the median depicted as a horizontal line inside the box. The plot provides a concise summary of the central tendency, spread, and potential outliers in the normalized data across different variables.

```{r}
box_plot_data <- 
  analysis_1.1 |>
  select(age_at_radiation,
         BMI, 
         num_comorbidities, 
         num_days_admitted, 
         num_hosp_complications, 
         number_of_admissions_with_urology_consultation, 
         number_of_cystoscopies, 
         number_transfusions, radiation_dosage,
         radiation_duration, 
         radiation_completion_to_first_hc) |>
  mutate_all(scale)

# Reshape data into long format
long_data <- 
  gather(box_plot_data, 
                    key = "Variable",
                    value = "Value")

# Create boxplots with normalized data, customized variable names
plot10 <- 
  ggplot(data =long_data, 
         aes(x = Variable, 
             y = Value, 
             fill = Variable)) +
  geom_boxplot(color = "black",
               alpha = 0.5) +
  labs(title = "Box plot visualization of selected variables",
       x = "Variables", 
       y = "Normalized Values") +
  theme_minimal() +
  theme(axis.text.x = element_blank()) 

print(plot10)

# Save the plot to folder results
ggsave(filename = "key_plot_1.10.png", 
      plot = plot10, 
      path = "~/group_18_project/results",
      width = 8, 
      height = 5, 
      dpi = 300)

```

\
