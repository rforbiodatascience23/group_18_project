---
title: "02_clean.qmd"
format: html
editor: visual
---

# Clean Data

## Clean HC patient data from sheet1 - dat_load1

```{r}

# Remove rows that do not correspond to patients and last column called "Notes" 
dat_load1 <- dat_load1 |> 
  slice(1:80) |> select(1:28)

# Make variable type as Date
dat_load1 <- dat_load1 |> 
  mutate(dob = ymd(dob))
```

### Give shorter names to the variables renaming them

```{r}

# Rename variables 
change_variable_names <- c(
  date_of_birth = "dob",
  grading_system = "ctcae_4_0_hematuria_grade",
  comorbidities = "comorbidities_dm_stroke_pvd_cirrhosis_drug_abuse_alcoholism_tobacco_hx_mi_last_6mo_chf_copd_esrd",
  cancer_type = "type_bladder_prostate_pathologic_clinial_staging_of_cancer",
  radiation_type = "type_of_radation",
  radiation_dosage = "dose_of_radation_gy",
  start_end_radiation = "start_date_of_radiation_end_date_of_radiation",
  number_of_admissions = "number_of_admissions_including_er_visits_requiring_urology_consultation",
  number_of_icu_admits = "number_of_icu_admits_with_hemorrhgic_cystits",
  radiation_completion_to_first_hc = "time_passed_since_completion_of_radiation_treatment_months_and_first_incidence_hc",
  number_of_cystoscopies = "number_of_cystoscopies_with_clot_evacuation_and_or_fulguration_of_bleeders",
  formalin_instillation = "number_of_times_requiring_formalin_instillation",
  alum_instillation = "number_of_times_requiring_alum_instillation",
  silver_nit_instillation = "number_of_times_requiring_silver_nitrate_instillation",
  amicar_instillation = "number_of_times_requiring_amicar_instillation",
  hyperbaric_o2 = "number_times_requiring_hyperbaric_o2_tx_days",
  surgery_for_urinary_diversion = "surgery_for_urinary_diversion_required_if_yes_what_type",
  number_transfusions = "number_of_units_of_p_rb_cs_tranfused",
  hospitalization_complications = "complications_during_hospitalization_uti_pyelonephritis_urosepsis_hydronephrosis_aki_other"
)


dat_load1 <- rename(dat_load1, 
                    any_of(change_variable_names))
```

### Correct mistakes in the variable classes

```{r}

## ethnicity - make all names lower case, change AA to african american
dat_load1 <- dat_load1 |> 
  mutate(ethnicity = ifelse(ethnicity == "AA", "african_american", tolower(ethnicity)))

## hospital_site - remove spaces and separate different hospitals by comas, correct names 
dat_load1 <- dat_load1 |> 
  mutate(hospital_site = str_replace_all(hospital_site, " ", ""),
         hospital_site = str_replace_all(hospital_site, "/", ","),
         hospital_site = str_replace(hospital_site, "Harperr", "Harper"),
         hospital_site = str_replace(hospital_site, "Haper", "Harper"))


## dat_load1 - remove characters "Gy" make the observatons as num
dat_load1 <- dat_load1 |> 
  mutate(radiation_dosage =  str_replace_all(radiation_dosage, "Gy", ""),
         radiation_dosage = round(as.numeric(radiation_dosage),2)) 

```

Separate cancer site

```{r}
## cancer_type is separated into new variables and then removed 
dat_load1 <- dat_load1 |> 
  mutate(
    cancer_site = case_when(
      grepl("prostate", tolower(cancer_type)) & grepl("bladder", tolower(cancer_type)) ~ "both",
      grepl("prostate", tolower(cancer_type)) ~ "prostate",
      grepl("bladder", tolower(cancer_type)) ~ "bladder",
      TRUE ~ NA_character_),
    cancer_stage = str_extract(cancer_type, "(?i)T\\d++[a-z]|Gleason \\d+")) |>
  select(-cancer_type)
```

Changing names in radiation_type

```{r}
change_variable_names2 <- c(
  "Adjuvant EBRT s/p prostatectomy for a pT4N0" = "EBRT/Adjuvant",
  "Adjuvant EBRT s/p prostatectomy with positive LNs" = "EBR/Adjuvant",
  "EBRT then seeds" = "EBRT",
  "EBRT, seeds" = "EBRT",
  "EBRT, seeds, intravescial chemo" = "EBRT",
  "EBRT, TURP" = "EBRT",
  "EBRT,brachytherapy,TURBT" = "EBRT/brachytherapy",
  "EBRT,seed implant, lupron" = "EBRT",
  "IMRT boost" = "IMRT",
  "IMRT/tomo" = "IMRT",
  "Mixed neutron and Photon IMRT" = "mixed_neutron_photon_IMRT",
  "mixed neutron/photon EBRT" = "mixed_neutron_photon_EBRT",
  "neutron and photon EBRT, lupron" = "mixed_neutron_photon_EBRT",
  "Neutron Irradiation and Intensity-Modulated Photon Therapy (IMRT)" = "IMRT",
  "Neutron/photon IMRT" = "mixed_neutron_photon_IMRT",
  "photon EBRT" = "mixed_neutron_photon_EBRT",
  "photon/neutron mixed EBRT" = "mixed_neutron_photon_EBRT",
  "radical prostactomey, Adjuvant radiation" = "Adjuvant",
  "Salvage EBRT" = "EBRT/Salvage",
  "Salvage EBRT 8 years s/p prostatectomy with positive margins for biochemical recurrence" = "EBRT/Salvage"
)

dat_load1 <- rename(dat_load1, 
                    any_of(change_variable_names2))
```

Load wider

```{r}
dat_load1_wider <- dat_load1 |>
  mutate(comorbidities = gsub("\n", "", comorbidities)) |>
  separate_rows(comorbidities, sep = ",") |>
  mutate(comorbidities = str_trim(comorbidities)) |>
  group_by(row_number()) |>
  mutate(comorbidities = make.names(comorbidities, unique = TRUE))|>
  pivot_wider(names_from = comorbidities, values_from = comorbidities, values_fn = function(x) ifelse(!is.na(x), 1, 0))

dat_load1_wider <- dat_load1_wider |>
  mutate(CHF.tobacco.abuse = CHF)

dat_load1_wider <- dat_load1_wider |> 
  group_by(date_of_birth) |> 
  summarise(dat_load1_wider)

dat_load1_wider <- dat_load1_wider |>
  mutate(hospitalization_complications = gsub("\n", "", hospitalization_complications)) |>
  separate_rows(hospitalization_complications, sep = ",") |>
  mutate(hospitalization_complications = str_trim(hospitalization_complications)) |>
  group_by(row_number()) |>
  mutate(hospitalization_complications = make.names(hospitalization_complications, unique = TRUE)) |>
  pivot_wider(names_from = hospitalization_complications, values_from = hospitalization_complications, values_fn = function(x) ifelse(!is.na(x), 1, 0))

dat_load1_wider <- dat_load1_wider |> 
  separate_rows(hospital_site, sep = ",") |>
  mutate(hospital_site = str_trim(hospital_site)) |>
  group_by(row_number()) |>
  mutate(hospital_site = make.names(hospital_site, unique = TRUE)) |>
  pivot_wider(names_from = hospital_site, values_from = hospital_site, values_fn = function(x) ifelse(!is.na(x), 1, 0))
```

### Save the cleaned data as a TSV file in data folder

```{r}
# Save clean data from sheet 1
write.table(x = dat_load1,
            file = "~/group_18_project/data/02_dat_clean1.tsv", 
            sep = "\t", 
            quote = TRUE,
            row.names = FALSE)
```

## Clean patient_data for sheets 2 and 3 - dat_load2 and dat_load3

```{r}
# Remove column from the variables and columns that don't exist in patient_info2
dat_load2 <- dat_load2 |> 
  select(-rads_for_prostate_primary, 
         -rads_bladder_primary, 
         -developed_bladder_first,
         -developed_prostate_first)

# Change variable in patient_info1 blader_ca to blader as in patient_info2
dat_load2 <- dat_load2 |>
  rename(bladder = "bladder_ca")
 
# Merge patient_info1 and patient_info2
combined_dat_load2_load3 <- bind_rows(dat_load2, dat_load3)

# Make rename hc as hc_incidence and remove no_hc. If obs=1 patient had hc if obs=0 patient didn't have hc 
combined_dat_load2_load3 <- combined_dat_load2_load3 |> 
  rename("hc_incidence" = "hc") |>
  select(-"no_hc")

# Rename the identifier fin to hospital_id 
combined_dat_load2_load3 <- combined_dat_load2_load3|>
  rename(hospital_id = "fin") 

# Rename 
combined_dat_load2_load3 <- combined_dat_load2_load3|>
  rename(prostate_cancer = "prostate", bladder_cancer = "bladder") 

# Combine types of treatment into one column called treatment
combined_dat_load2_load3 <- combined_dat_load2_load3 |>
  pivot_longer(cols = ebrt:brachytherapy,
              names_to = "treatment", 
              values_to = "values",
              values_drop_na = TRUE) |>
  select(-values)

# Replace NA and Xs for 0 and 1s but yes
combined_dat_load2_load3 <- combined_dat_load2_load3 |> 
   mutate_all(~ ifelse(is.na(.) | tolower(.) == "na", "no", 
                       ifelse(tolower(.) == "x", "yes", .))) 

```

### Save the cleaned data as a TSV file in data folder

```{r}

# Save combined clean data from sheet 2 and sheet 3
write.table(x = combined_dat_load2_load3,
            file = "~/group_18_project/data/02_dat_clean2.tsv", 
            sep = "\t", 
            quote = TRUE,
            row.names = FALSE)
```
